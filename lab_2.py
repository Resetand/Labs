import cv2


# Лабораторная работа №2
# Тема: «Вывод видео. Детектирование краев»
# 	•	Разработать приложение, выводящее видео с камеры.
# 	•	Примените к видео в реальном времени:
# 	•	оператор Собеля
# 	•	оператор Лапласа
# 	•	детектор границ Кенни.


cap = cv2.VideoCapture(0)


while(True):
    # Изображение в opencv представлено в виде двумерной матрицы чисел rgb
    # Над числами можно выполнять операции, например: найти производную

    # Производная - отношение значения приращения пикселя по y к значению приращению пикселя по x

    # Градиент  — вектор, показывающий направление наискорейшего возрастания некоторой величины,
    # значение которой меняется от одной точки пространства к другой(скалярного поля).
    _, frame = cap.read()

    # суммирование производных второго порядка
    # фактически, это оператор собеля с dx = dy = 2
    laplacian = cv2.Laplacian(frame, cv2.CV_64F)

    # Canny является методом выделения границ.
    # Работает так
    # — Убрать шум и лишние детали из изображения
    # — Рассчитать градиент изображения
    # — Сделать края тонкими (edge thinning)
    # — Связать края в контура (edge linking)
    canny = cv2.Canny(frame, 100, 200)

    # Оператор Собеля — это дискретный дифференциальный оператор,
    # вычисляющий приближение градиента яркости изображения.
    # Оператор вычисляет градиент яркости изображения в каждой точке.
    sobelx = cv2.Sobel(frame, cv2.CV_64F, 1, 0, ksize=5)
    sobely = cv2.Sobel(frame, cv2.CV_64F, 0, 1, ksize=5)

    cv2.imshow('laplacian', laplacian)
    cv2.imshow('Canny', canny)
    cv2.imshow('sobelx', sobelx)
    cv2.imshow('sobely', sobely)

    k = cv2.waitKey(5) & 0xFF
    if k == 27:
        break

cv2.destroyAllWindows()
cap.release()
